# Map for WebSocket upgrade
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

# Redirect HTTP → HTTPS (keeps path for ACME/health if needed)
server {
  listen 80;
  listen [::]:80;
  server_name $DOMAIN;

  location /.well-known/acme-challenge/ {
    root /usr/share/nginx/html;
  }

  location /health { return 200 'ok'; add_header Content-Type text/plain; }

  location / { return 301 https://$host$request_uri; }
}

# HTTPS reverse proxy + static site + WS passthrough
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name $DOMAIN;

  # Cloudflare Origin Certs
  ssl_certificate     /etc/nginx/certs/origin.crt;
  ssl_certificate_key /etc/nginx/certs/origin.key;

  # SSL hardening
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers off;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;

  # Security headers
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
  add_header X-Content-Type-Options nosniff always;
  add_header X-Frame-Options DENY always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Referrer-Policy no-referrer-when-downgrade always;
  add_header Content-Security-Policy "default-src 'self' https: data: blob: 'unsafe-inline'" always;

  # Health
  location /health { return 200 'ok'; add_header Content-Type text/plain; }

  # WebSocket → Xray (VLESS WS)
  location /ws {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;

    proxy_read_timeout 86400;
    proxy_send_timeout 86400;

    proxy_pass http://xray:10000;
  }

  # Legit static site fallback (keeps domain looking normal)
  location / {
    root /usr/share/nginx/html;
    try_files $uri $uri/ /index.html;
  }
}
